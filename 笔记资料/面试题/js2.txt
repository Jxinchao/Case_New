1.如何让一个字符串的首之母大写                            ----汪玉莹
var a='abcdefg'
alert(a.charAt(0).toUpperCase()+a.substring(1))
2.数组中找最大值(不用sort方法)                               ----汪玉莹
  var a=[111,222,333,444]
  var b=0;
  for(var i=0;i<a.length;i++){
    if(a[i]>b){
        b=a[i]
    }
  }
  alert(b)
  数组中找最小值(不用sort方法)
  var a=[111,222,333,444]
  var b=a[1];//等于数组里的任何一个数
  for(var i=0;i<a.length;i++){
    if(a[i]>b){
        b=a[i]
    }
  }
  alert(b)
3.如何声明一个有9个空值的数组                               ----汪玉莹
  1)var a=new Array(9)
  2)var a=[]
    a.length=9
4.如何把var a='evol'变成l,o,v,e                                   ----汪玉莹
  alert(a.split('').reverse())
5.让var a=[92,299,3,1,3,4,5]从大到小和从小到大排        ----汪玉莹
  alert(a.sort(function(x,y){return x-y}))
  alert(a.sort(function(x,y){return y-x}))
6.array有两种声明方式                                                ----汪玉莹
  第一种naw Array()
  第二种就是用中括号                                                      
7.利用sort可以给字母排序，不可给数字排序，给数字排序时要传参数          ----冯斌斌
8.slice和splice的区别：slice可传1个和2个参数，是截取字符串，splice可以删除，插入和替换      ----冯斌斌
9.字符串转换方式：                                                               ----冯斌斌
1、var num=19
     var mystr=num.toString()
2、var num=19
     var mystr=String(num)
3、var num=19
     var mystr=‘’+num
10.数组去重两种方法                                            ----冯斌斌
var arr=[1,1,2,2,3,3,4] 
       for(var i=0; i<arr.length; i++){
       	  for(var j=i+1; j<arr.length; j++){
       	  	 if(arr[i]==arr[j]){
       	  	 	 arr.splice(j,1)
       	  	 	 j--
       	  	 }
       	  }
       }
       document.write(arr)
        var arr=[1,1,2,2,3,3,4];
	    var arr2=[];
	    for(var i = 0;i<arr.length;i++){
		   if(arr2.indexOf(arr[i])==-1){
			  arr2.push(arr[i])
		   }
	        }
	    alert(arr2);
11.数组排序两种方法                                                 ----冯斌斌
var arr=[1,23,45,67,6,5,4,3,23]
       for(var i=0; i<arr.length; i++){
       	   for(var j=0; j<arr.length; j++){
       	   	   if(arr[i]<arr[j]){
       	   	   	   var tmp=arr[i]
       	   	   	   arr[i]=arr[j]
       	   	   	   arr[j]=tmp
       	   	   }
       	   }
       }
       document.write(arr)
var arr=[1,23,45,67,6,5,4,3,23]
       for(var i=0; i<arr.length; i++){
       	   for(var j=i+1; j<arr.length; j++){
       	   	   if(arr[i]<arr[j]){
       	   	   	   var tmp=arr[i]
       	   	   	   arr[i]=arr[j]
       	   	   	   arr[j]=tmp
       	   	   }
       	   }
       }
       document.write(arr)
12.call和apply的区别                                                  ----冯斌斌
call和apply相同点：
都是为了用一个本不属于一个对象的方法，让这个对象去执行
toString.call([],1,2,3)
toString.apply([],[1,2,3])
Object.call(this,obj1,obj2,obj3)
Object.apply(this,arguments)
区别：call第二个参数开始接受一个参数列表
apply第二个参数开始接受一个参数数组



14.获取年月日：                          ----王鹏远
   输出今天的日期，以YYYY-MM-DD的方式，比如今天是2014年9月26日，则输出2014-09-26            
  var d = new Date();
   // 获取年，getFullYear()返回4位的数字 //今年：2016
 var year = d.getFullYear();
 // 获取月，月份比较特殊，0是1月，11是12月
 var month = d.getMonth() + 1;
 // 变成两位
 month = month < 10 ? '0' + month : month;
 // 获取日
 var day = d.getDate();
 day = day < 10 ? '0' + day : day;
 alert(year + '-' + month + '-' + day);
15.短路表达式                                    ----王鹏远
   foo = foo||bar ，这行代码是什么意思？为什么要这样写？
   这种写法称之为短路表达式
   答案：if(!foo) foo = bar; //如果foo存在，值不变，否则把bar的值赋给foo。
  短路表达式：作为”&&”和”||”操作符的操作数表达式，这些表达式在进行求值时，只要最终的结果已经可以确定是真或假，求值过程便告终止，这称之为短路求值。
  注意if条件的真假判定，记住以下是false的情况：
  空字符串、false、undefined、null、0
16.Javascript创建对象的几种方式？       ----王鹏远
   第一种：对象字面量、Object构造函数
   第二种：构造函数
   第三种：纯构造函数
  第四种：空构造函数+原型
  第五种：混合构造函数+原型
  第六种：动态原型
  第七种：寄生构造函数
  第八种：Object.create()――ES5 ie9+
 
 
17.javascript的同源策略                            ----王鹏远
一段脚本只能读取来自于同一来源的窗口和文档的属性，这里的同一来源指的是主机名、协议和端口号的组合
协议：http,ftp https
主机名；localhost 127.0.0.1
端口名：80:
127.0.0.1:1011
http协议的默认端口：80
https:协议的默认端口是8083
同源策略带来的麻烦：ajax在不同域名下的请求无法实现，
如果说想要请求其他来源的js文件，或者json数据，那么可以通过jsonp来解决
JSONP的实现原理：通过动态创建script标签 

19.如何阻止事件冒泡和默认事件              -----童子馨
      e. stopPropagation();//标准浏览器阻止事件冒泡
      event.canceBubble=true;//ie9之前
      阻止默认事件：
      为了不让a点击之后跳转，我们就要给他的点击事件进行阻止
      return false
      e.preventDefault();
20.简要描述你对闭包的理解：              -----童子馨
     函数对象可以通过作用域链相互关联起来，函数体内部的变量都是保存在函数作用域内，这种特性叫做闭包，（函数嵌套函数）
     这意味着函数变量可以隐藏于作用域链之内，看起来好像是函数将变量包裹了起来，这种方式常用于共享函数内的私有变量
 闭包特征：
     局部变量：在函数中定义有共享意义（如：缓存，计算器等）的局部变量（注：定义成全局变量会对外造成污染）；
     内嵌函数： 在函数中声明有内嵌函数，内嵌函数对函数的局部变量进行访问；
     外部使用：函数向外返回此内嵌函数，外部可以通过内嵌函数持有并访问声明在函数中的局部变量，而此变量在外部是通过其他路径无法访问的。
21.简述你对js中原型的理解：                 -----童子馨
      在js中，函数本身就是一个包含的方法和属性的对象，每一个函数中都有一个prototype属性，该属性所储存的就是原型对象
      原型对象可以用来保存共存属性和方法，可以通过原型来实现为对象扩展属性，实现继承
22.数组：                                            -----童子馨
     Unshift 往前加
     Push 往后加数组
     Arr.shift 从前往后删
     Arr.pop 从后往前删
     快速清空数组方法var arr=[]
                              Arr.length=0
     Arr.splice（第几项   删几个）删除
     Arrr.splice（第几位  删几位  替换为啥）替换
     Arr.splice（第几位　　０　　加啥）添加
     Ａrr.reversea（数组倒过来）
     concat   合并数组 （也兼容字符串)
     indexOf ／ lastIndexOf （ie8以下不兼容）
23.简述null于undefined的区别：                     -----童子馨
       null是js的关键字，用于表述空值，对其进行typeof操作，返回object，即一个特殊的对象值，可以用来表示数字，字符串和对象是'无值'的，
       undefined:是预定义的全局变量，其值为未定义，它是变量的一种取值，表示变量没有初始化，当咨询对象属性，数组元素的值时，如果返回
       undefined则表示属性或者元素不存在，如果函数没有任何返回值，也返回undefined；
       注意：null虽然与undefined不同，但是因为都表示值得空缺，两者可以互换的，因此，使用'=='认为二者相等，需要用'==='来区分它们
24.解释js中的全局变量yu局部变量的区别：       -----童子馨
      全局变量拥有全局作用域，在js代码任何地方都可以访问，在函数内声明的只有在函数体内拥有意义，即为局部变量其作用域是局部性的；
       注意：在函数体声明局部变量时，如果不使用var关键字，则声明全局变量。


27.给基本类型数据添加属性，不报错，但取值时是 ，给基本类型数据添加属性，不报错，但取值时是 undef i ned                         -----丁子皓
    a = 3
   a.prop = 4
alert(a + a.prop) // ?
变量a为数字3，给其添加pr op属性，值为4（奇怪吧在JS中这是允许的，且不会有语法错误）。然后al er t 出a+ a.pr op的结果。结果是NaN。
a.pr op为undef i ned，3+ undef i ned为NAN。
举一反三，给字符串添加属性

str = 'a'
str.prop = 'b'
alert(str + str.prop) // ?
结果呢？
28.隐式的全局变量 ，隐式的全局变量                            -----丁子皓
var a = 1
function func() {
a = b = 2
}
func()
alert(a)
alert(b) // ?
JS中不用var 声明的变量默认是全局变量，而这里的连等使的情况更加隐蔽。这里的b是全局的，因此func 外可以访问。
29.变量声明早于代码运行（ ，变量声明早于代码运行（ Scopi ng  and  Hoi sti ng）            -----丁子皓
var uname = 'jack'
function change() {
alert(uname) // ?
var uname = 'lily'
alert(uname)
}
change()
这里容易犯迷糊的是第一个al er t ，如果认为函数c hange外已经声明赋值了，此时应该是j ac k ，实际函数内又var 了一次（虽然var 在其后），预解
析时仍然会将其置undef i ned。这也是为什么书里都建议变量声明都放在代码块的最前面。
30.函数声明 ，函数声明 早于 早于 变量声明 变量声明                                                      -----丁子皓
function change() {
alert(typeof fn) // ?
function fn() {
alert('hello')
}
var fn
}
change()
c hange内先al er t 出fn，后函数声明，再变量声明。如果fn没有函数声明而仅是变量声明，那么结果与5一样是undef i ned。但这里却是func t i on。
即同一个作用域内，函数声明放在代码块后面和前面都没有关系，函数可以正常使用。而变量声明则需先置前，先使用则是undef i ned。
31.api是什么                                                                                                      -----多余
Application(应用) Programming(设计) Interface(界面) 
应用程序编程接口


/***********************************************************************/1510A
//1510A方雪
一、编写一个数组去重的方法
[1,3,1,5,2,3,7]=>[1,3,5,2,7]
方法1：
1、 先创建一个空数组，用来保存最终的结
2、 循环原数组中的每个元素
3、 再对每个元素进行二次循环，判断是否有与之相同的元素，如果没有，将把这个元素放到新数组中
4、 返回这个新数组
方法2：
数组的indexOf()方法返回给定元素能找在数组中找到的第一个索引值，否则返回-1。
Array.prototype.unique2 = function(){
	var n = []; //一个新的临时数组
	for(var i = 0; i < this.length; i++){ //遍历当前数组	
		//如果当前数组的第i已经保存进了临时数组，那么跳过，
		//否则把当前项push到临时数组里面
		if (n.indexOf(this[i]) == -1) n.push(this[i]);
	}
	return n;
}

二、如何检测数组的数据类型
方法一、判断其是否具有“数组性质”，如slice()方法。可自己给该变量定义slice方法，故有时会失效
方法二、obj instanceof Array 在某些IE版本中不正确
方法三、toString.call([]);//”[object Array]”
方法四、方法一二皆有漏洞，在ECMA Script5中定义了新方法Array.isArray(), 保证其兼容性，最好的方法如下：
if(typeof Array.isArray==="undefined"){
  	Array.isArray = function(arg){
    	return Object.prototype.toString.call(arg)==="[object Array]"
	};
}

三、var arr = [3,6,2,4,1,5]; （考察基础API）
1) 实现对该数组的倒排，反转，输出[5,1,4,2,6,3]
arr.reverse()
2) 实现对该数组的降序排列，输出[6,5,4,3,2,1]
arr.sort(function(a, b){
	return b-a;
});
alert(arr);
冒泡排序
var arr = [12,3,4,56,78,90,9,876,54,32];
for(var i=0; i<arr.length; i++){
	for(var j=0; j<arr.length; j++){
		if(arr[i]<arr[j]){
			var tmp = arr[i];
			arr[i] = arr[j];
			arr[j] = tmp;
		}
	}
}
alert(arr.reverse());

四、判断一个字符串中出现次数最多的字符，统计这个次数
答：var str = 'asdfssaaasasasasaa';
	var json = {};
	for (var i = 0; i < str.length; i++) {
	        if(!json[str.charAt(i)]){ //str.charAt(i) =”a”
	                json[str.charAt(i)] = 1; //json[“a”]=1
	        }else{
	                json[str.charAt(i)]++; //让a键的值+1，也就是这个字符多出现了一次
	        }
	};
	var iMax = 0;
	var iIndex = '';
	for(var i in json){
	        if(json[i]>iMax){
	                iMax = json[i];
	                iIndex = i;
	        }
	}
	alert('出现次数最多的是:'+iIndex+'出现'+iMax+'次');
	
五、window.location.search返回的是什么？
答：查询(参数)部分。除了给动态语言赋值以外，我们同样可以给静态页面,并使用javascript来获得
相信应的参数值返回值：?ver=1.0&id=timlq 也就是问号后面的！
//url:http://www.sina.com/getage?number=1&year=2016

六、window.location.hash 返回的是什么？
答：锚点 ， 返回值：#love ；
//url:http://www.sina.com/getage?#age
这时就返回”#age”

七、window.location.reload() 作用？
答：刷新当前页面。

八、请列举js数组类型中的常用方法
方法描述
concat() 连接两个或更多的数组，并返回结果。
//var arr1 = [1,2,3];
//var arr2 = ['a','b','c'];
//alert(arr1.concat(arr2,arr2));  结果：[1,2,3,'a','b','c','a','b','c']

join() 数组变字符串。元素通过指定的分隔符进行分隔。
//var arr = new Array(3)
//arr[0] = "George"
//arr[1] = "John"
//arr[2] = "Thomas"
//alert(arr);
//document.write(arr.join())  //默认添加','  结果：George,John,Thomas
//
//var arr = new Array(3)
//arr[0] = "George"
//arr[1] = "John"
//arr[2] = "Thomas"
//document.write(arr.join('-'));  结果：George-John-Thomas

pop() 从后面删除并返回数组的最后一个元素
//var arr = [0,9,8,7];
//arr.pop()  结果：[0,9,8]

shift() 删除并返回数组的第一个元素
//var arr = [0,9,8,7];
//arr.shift(); 结果：[9,8,7]

reverse() 翻转数组。
//var arr = [0,9,8,7];
arr.reverse()  结果：[7,8,9,0]

sort() 对数组的元素进行排序
//var arr = [0,9,8,7];
arr.sort() //默认排字符串   结果： [0,9,8,7]
从大到小排    
arr.sort(function(a, b){
	return b-a;
});
alert(arr)   结果：[9,8,7,0]

push() 向数组的末尾添加一个或更多元素，并返回新的长度。
//var arr = [0,9,8,7];
//arr.push('6') 结果： [0,9,8,7,6]

unshift() 向数组的开头添加一个或更多元素，并返回新的长度。
//var arr = [0,9,8,7];
//arr.unshift('6') 结果： [6,0,9,8,7]

splice() 删除元素，并向数组添加新元素。
删除   arr.splice(开始下标,个数);
插入   arr.splice(开始下标,0,新元素);   
替换   arr.splice(开始下标,个数,新元素);  //包含下标

slice() 从已有的数组中返回选定的元素（所有主要浏览器都支持slice()）。
	array.slice(start, end)
	start必需。规定从何处开始选取。如果是负数，那么它规定从数组尾部开始算起的位置。
	也就是说，-1 指最后一个元素，-2 指倒数第二个元素，以此类推。
	end 可选。规定从何处结束选取。该参数是数组片断结束处的数组下标。如果没有指定该参数，那么切分的数组包含
	从 start 到数组结束的所有元素。如果这个参数是负数，那么它规定的是从数组尾部开始算起的元素。 
	例：var fruits = ["Banana", "Orange", "Lemon", "Apple", "Mango"];
	var citrus = fruits.slice(1,3);
	alert(citrus) 结果：Orange,Lemon

toString() 把数组转换为字符串，并返回结果。
	var fruits = ["Banana", "Orange", "Apple", "Mango"];
	var str = fruits.toString();
	alert(str)   结果：Banana,Orange,Apple,Mango
	alert(typeof(str))  结果：String

valueOf() 返回数组对象的原始值（数组对象的默认方法）。
	var fruits = ["Banana", "Orange", "Apple", "Mango"];
	alert(fruits.valueOf());  结果：Banana,Orange,Apple,Mango


九、给字符串扩展一个兼容所有浏览器的清除前后的空格的方法
if (!String.prototype.trim) {
	String.prototype.trim = function() {
		return this.replace(/^\s+/, "").replace(/\s+$/,"");
	}
}
//1510A王姣姣
十、查找数组中最大值可以使用那些方法？
 答案：
		a. for循环遍历
		b. 数组排序
		c. 数组排序+截取
		d. 借用Math最大值方法
十一、js中如何检测一个变量是一个String类型？
答案：
		typeof(obj)==string;
		obj.constructor==string;
十二、underfined与null的异同？
	相同：都表示空转换成boolean都位false
	不同：null代表一个对象变量已经被初始化，但未装入对象；
	underfined表示未初始化变量	
十三、Js的5种基本数据类型，2种复合数据类型？
答案：
		主要：string Boolean number undefined null
                复合：function object
十四、用js实现随机选取10-100之间的数字，存入一个数组，并排序
答案：
		var Array=[];
		Function gerPandom(start ,end){
		Var choice=start-end+1;
		Return Math.floor(Math.random()*choice+start)
		}
		For(var i=0;i<10;i++){
		Array.push(getRandom(10,100))
		Array.sort()
		}                
十五、把两个数组合并，并删除第二个元素？
答案：
		var array=[‘a’,’b’,’c’]
		var arrary2=[‘d’,’e’,’f’]
		var array3=array.concat(array2)
		Array3.splice(1,1)  
//1510A王志悦	              
十六、运行的结果？
		function hi(){
		var a;
		alert(a);
		}
		结果：undefined                
十七、浏览器的对象模型？
		Window  
十八、javascript的常用对象有哪些？
		String, Math, Date和Array对象
十九、运行的结果？
		function hi(){
		var a = null;
		alert(a);
		}
		结果：null		
二十、XMLHTTPRequest对象是什么？
		Ajax原理		
二十一、求y和z的值是多少？
		<script type="text/javascript">
			var x = 1;
			var y = 0;
			var z = 0;
			function add(n){n=n+1;}
			y = add(x);
			function add(n){n=n+3;}
			z = add(x);
		</script>
		都为undefined，因为没有返回值。		
二十二、javascript是面向对象的，怎么体现javascript的继承关系？
		使用prototype来实现。		
二十三、js中的3种弹出式消息提醒（警告窗口，确认窗口，信息输入窗口）的命令式什么？
		alert
		confirm
		prompt		
//1510A郭冉冉
二十四、输入一个英文句子，翻转句子中单词的顺序，但单词内字符的顺序不变。 句子中单词以空格符隔开。为简单起见，标点符号和普通字母一样处理。例如输入“I am a student.”，则输出“student. a am I”。
答案：
		var str = 'I am a student.';
		var arr = str.split(' ');
		arr.reverse();
 		alert(arr);
二十五、	输入一个已经按升序排序过的数组和一个数字，在数组中查找两个数，使得它们的和正好是输入的那个数字。
		var arr = [1,2,3,4,5,6,7,8,9,11];
		var num = 10;
		var n1,n2;
		for (var i=0;i<arr.length;i++) {
		 	for (var j=i+1;j<arr.length;j++) {
	 		if (arr[i]+arr[j]==num) {
					n1 = arr[i];
					n2 = arr[j];
		 		};
		 	};
		 };
		 alert(n1+','+n2);
//1510A苗春开
二十六、	在一个字符串中找到第一个只出现一次的字符。如输入abaccdeff，则输出b。
		var str = 'abaccdeff';
		for (var i=0;i<str.length;i++) {
		 	var flag = 0;
		 	for (var j=0;j<str.length;j++) {
				if (j==i) {
					continue;
				};
		 		if (str.charAt(i)==str.charAt(j)) {
		 			flag++;
				}
		 	};
			if (flag == 0) {
		 		alert(str.charAt(i));
				break;
		 	};
		 };
二十七、定义字符串的左旋转操作：把字符串前面的若干个字符移动到字符串的尾部。如把字符串abcdef左旋转2位得到字符串cdefab。请实现字符串左旋转的函数。
		var str = 'abcdefg';
		// alert(str.substring(3));
		// alert(str.substr(0,3));
		str1 = str.substring(3)+str.substr(0,3);
		alert(str1);
二十八、有n个长为m+1的字符串，如果某个字符串的最后m个字符与某个字符串的前m个字符匹配，则两个字符串可以联接，问这n个字符串最多可以连成一个多长的字符串，如果出现循环，则返回错误。	
		var n = 10;
		var m = 9;
		for (var i=0;i<n;i++) {
			m++;			
		};
		alert(m);
//1510A马玲		
二十九、js，html，css三者之间的关系
		html   结构层
		css    表现层
		js     行为层	
		
三十、关于IE的window对象表述正确的有：(acd) 
A.window.opener属性本身就是指向window对象
 
B.window.reload()办法可以用来刷新当前页面
 
C.window.location=”a.html”和window.location.href=”a.html”的感化都是把当前页面调换成a.html页面
 
D.定义了全局变量g;可以用window.g的体式格式来存取该变量		














